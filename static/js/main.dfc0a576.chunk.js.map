{"version":3,"sources":["App.js","redux/user/userReducer.js","redux/types.js","redux/cart/cartUtils.js","redux/cart/cartReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["App","initialState","currentUser","userReducer","state","action","type","payload","addItemToCart","cartItems","cartItemToAdd","find","cartItem","id","map","quantity","removeItem","cartItemToRemove","filter","hidden","cartReducer","persistConfig","key","storage","whiteList","rootReducer","combineReducers","user","cart","persistReducer","middleware","looger","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"iOAUeA,G,MARH,WACV,OACE,iD,gECDEC,EAAe,CACjBC,YAAc,MAcHC,EAXK,WAAiC,IAAhCC,EAA+B,uDAAvBH,EAAaI,EAAU,uCAChD,OAAQA,EAAOC,MACX,ICTwB,mBDUxB,OAAO,eACAF,EADP,CAEIF,YAAYG,EAAOE,UAEvB,QAAU,OAAOH,I,QEdZI,EAAgB,SAACC,EAAUC,GAGpC,OAFyBD,EAAUE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAOH,EAAcG,MAGvEJ,EAAUK,KAAI,SAAAF,GAAQ,OACzBA,EAASC,KAAOH,EAAcG,GAA9B,eAAuCD,EAAvC,CAAgDG,SAASH,EAASG,SAAW,IAC3EH,KAIJ,GAAN,mBAAWH,GAAX,gBAA0BC,EAA1B,CAAwCK,SAAS,OAKxCC,EAAa,SAACP,EAAUQ,GAEjC,OAAiC,IADRR,EAAUE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAOI,EAAiBJ,MACjEE,SACTN,EAAUS,QAAO,SAAAN,GAAQ,OAAIA,EAASC,KAAOI,EAAiBJ,MAElEJ,EAAUK,KAAI,SAAAF,GAAQ,OAAIA,EAASC,KAAOI,EAAiBJ,GAAjC,eAA0CD,EAA1C,CAAmDG,SAASH,EAASG,SAAU,IAAKH,MClBnHX,EAAe,CACjBkB,QAAS,EACTV,UAAY,IAiCDW,EA9BK,WAAkC,IAAjChB,EAAgC,uDAAxBH,EAAaI,EAAW,uCACjD,OAAQA,EAAOC,MACX,IFR0B,qBEStB,OAAO,eACAF,EADP,CAEIe,QAAQf,EAAMe,SAGtB,IFbgB,WEcZ,OAAO,eACAf,EADP,CAEIK,UAAUD,EAAcJ,EAAMK,UAAUJ,EAAOE,WAGvD,IFlBkB,aEmBd,OAAO,eACAH,EADP,CAEIK,UAAWL,EAAMK,UAAUS,QAAO,SAAAN,GAAQ,OAAIA,EAASC,KAAOR,EAAOE,QAAQM,QAErF,IFtBmB,cEuBf,sBACOT,EADP,CAEIK,UAAYO,EAAWZ,EAAMK,UAAUJ,EAAOE,WAItD,QAAU,OAAOH,IC3BnBiB,EAAgB,CAClBC,IAAM,OACNC,YACAC,UAAW,CAAC,SAGVC,EAAcC,0BAAgB,CAChCC,KAAOxB,EACPyB,KAAOR,IAIIS,cAAeR,EAAcI,GCXtCK,EAAa,CAACC,KAENC,EAAQC,sBAAYR,EAC9BS,8BACIC,kBAAe,WAAf,EAAmBL,KAGbM,EAAYC,YAAaL,GCHvCM,IAASC,OACL,kBAAC,IAAD,CAAUP,MAAOA,GACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAaI,UAAWA,IACpB,kBAAC,EAAD,QAGVI,SAASC,eAAe,W","file":"static/js/main.dfc0a576.chunk.js","sourcesContent":["import React from 'react'\n\nconst App = () => {\n  return (\n    <div>\n      teeeeeeeeeeees\n    </div>\n  )\n}\n\nexport default App\n","import { SET_CURRENT_USER } from \"../types\";\n\n\nconst initialState = {\n    currentUser : null \n}\n\nconst userReducer = (state = initialState,action) =>{\n    switch (action.type) {\n        case SET_CURRENT_USER :  \n        return {\n            ...state,\n            currentUser:action.payload\n        }\n        default : return state ;\n    }\n} \n\nexport default userReducer\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const TOGGLE_CART_HIDDEN = 'TOGGLE_CART_HIDDEN';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const CLEAR_ITEM = 'CLEAR_ITEM'\nexport const REMOVE_ITEM = 'REMOVE_ITEM'\n","export const addItemToCart = (cartItems,cartItemToAdd) => {\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id)\n\n    if(existingCartItem){\n        return cartItems.map(cartItem => \n            cartItem.id === cartItemToAdd.id ? {...cartItem,quantity:cartItem.quantity + 1}\n            : cartItem\n            )\n    }\n\n    return [...cartItems, {...cartItemToAdd,quantity:1}]\n}\n\n\n\nexport const removeItem = (cartItems,cartItemToRemove) => {\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id)\n    if(existingCartItem.quantity === 1){\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n    }\n    return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {...cartItem,quantity:cartItem.quantity -1} : cartItem)\n\n}","import { TOGGLE_CART_HIDDEN,ADD_ITEM,CLEAR_ITEM,REMOVE_ITEM } from \"../types\";\nimport {addItemToCart,removeItem} from './cartUtils'\nconst initialState = {\n    hidden : true,\n    cartItems : []\n}\n\nconst cartReducer = (state = initialState,action) => {\n    switch (action.type) {\n        case TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden:!state.hidden\n            }\n\n        case ADD_ITEM:\n            return {\n                ...state,\n                cartItems:addItemToCart(state.cartItems,action.payload)\n            }\n\n        case CLEAR_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n            }\n        case REMOVE_ITEM :\n            return{\n                ...state,\n                cartItems : removeItem(state.cartItems,action.payload)\n            }            \n\n            \n        default : return state ;\n    }\n}\n\nexport default cartReducer\n","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport userReducer from './user/userReducer';\nimport cartReducer from './cart/cartReducer';\n\nconst persistConfig = {\n    key : 'root',\n    storage,\n    whiteList :['cart']\n}\n\nconst rootReducer = combineReducers({\n    user : userReducer,\n    cart : cartReducer\n});\n\n\nexport default persistReducer(persistConfig,rootReducer)\n\n","import {createStore,applyMiddleware} from 'redux'\nimport {persistStore} from 'redux-persist'\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport looger from 'redux-logger';\nimport rootReducer from './rootReducer';\n\nconst middleware = [looger] ;\n\n export const store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(...middleware),\n      )\n    );\n export const persistor = persistStore(store)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={store}> \n        <BrowserRouter>\n        <PersistGate persistor={persistor} /> \n            <App />\n        </BrowserRouter>\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}